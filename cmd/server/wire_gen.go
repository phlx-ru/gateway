// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"gateway/internal/biz"
	"gateway/internal/clients"
	"gateway/internal/conf"
	"gateway/internal/pkg/metrics"
	"gateway/internal/server"
	"gateway/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(contextContext context.Context, confServer *conf.Server, authClient clients.AuthClient, metricsMetrics metrics.Metrics, logger log.Logger) (*kratos.App, error) {
	gatewayUsecase := biz.NewGatewayUsecase(authClient, metricsMetrics, logger)
	gatewayService := service.NewGatewayService(gatewayUsecase, metricsMetrics, logger)
	httpServer := server.NewHTTPServer(confServer, gatewayService, metricsMetrics, logger)
	app := newApp(contextContext, logger, httpServer)
	return app, nil
}
