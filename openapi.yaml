# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Gateway API
    version: 1.1.1
paths:
    /v1/auth/change_password:
        post:
            tags:
                - Auth
            description: Set new password by username and old password
            operationId: Auth_ChangePassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.ChangePasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.AuthNothing'
    /v1/auth/check:
        post:
            tags:
                - Auth
            description: Check user and session info by token
            operationId: Auth_Check
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.CheckRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.CheckResponse'
    /v1/auth/generate_code:
        post:
            tags:
                - Auth
            description: Generate one-time code for LoginByCode() and sends it to user
            operationId: Auth_GenerateCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.GenerateCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.AuthNothing'
    /v1/auth/history:
        post:
            tags:
                - Auth
            operationId: Auth_History
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.HistoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.HistoryResponse'
    /v1/auth/login:
        post:
            tags:
                - Auth
            description: Login user by username and password, returns JWT token
            operationId: Auth_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.LoginResponse'
    /v1/auth/login_by_code:
        post:
            tags:
                - Auth
            description: Login user by username and one-time code (generated with GenerateCode()), returns JWT token
            operationId: Auth_LoginByCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LoginByCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.LoginResponse'
    /v1/auth/new_password:
        post:
            tags:
                - Auth
            description: Set new password by resetPasswordUID, which generated and sent to user with ResetPassword()
            operationId: Auth_NewPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.NewPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.AuthNothing'
    /v1/auth/reset_password:
        post:
            tags:
                - Auth
            description: Generate ResetPasswordUID and sends it to user
            operationId: Auth_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.ResetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.AuthNothing'
    /v1/check:
        post:
            tags:
                - Notification
            description: Check notification status by id
            operationId: Notification_Check
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification.v1.CheckRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/notification.v1.CheckResponse'
    /v1/enqueue:
        post:
            tags:
                - Notification
            description: Enqueues notification to internal queue with maximum latency 1000ms
            operationId: Notification_Enqueue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification.v1.SendRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/notification.v1.EnqueueResponse'
    /v1/send:
        post:
            tags:
                - Notification
            description: Immediately send notification to recipient â€” waiting for response may be long
            operationId: Notification_Send
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/notification.v1.SendRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/notification.v1.SendResponse'
    /v1/users/activate:
        post:
            tags:
                - User
            operationId: User_Activate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.ActivateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.UserNothing'
    /v1/users/add:
        post:
            tags:
                - User
            operationId: User_Add
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.AddRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.AddResponse'
    /v1/users/deactivate:
        post:
            tags:
                - User
            operationId: User_Deactivate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.DeactivateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.UserNothing'
    /v1/users/edit:
        post:
            tags:
                - User
            operationId: User_Edit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.EditRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.UserNothing'
components:
    schemas:
        auth.v1.ActivateRequest:
            type: object
            properties:
                id:
                    type: string
        auth.v1.AddRequest:
            type: object
            properties:
                displayName:
                    type: string
                type:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                telegramChatId:
                    type: string
                password:
                    type: string
                activated:
                    type: boolean
        auth.v1.AddResponse:
            type: object
            properties:
                id:
                    type: string
        auth.v1.AuthNothing:
            type: object
            properties: {}
            description: Empty response for success signal without data
        auth.v1.ChangePasswordRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Users phone (like 9003002020) or email (like user@name.mail)
                oldPassword:
                    type: string
                    description: Old users password
                newPassword:
                    type: string
                    description: New users password
                stats:
                    $ref: '#/components/schemas/auth.v1.Stats'
        auth.v1.CheckRequest:
            required:
                - token
            type: object
            properties:
                token:
                    type: string
                    description: User auth JWT token
            description: Request for check auth
        auth.v1.CheckResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/auth.v1.CheckResponse_User'
                session:
                    $ref: '#/components/schemas/auth.v1.CheckResponse_Session'
        auth.v1.CheckResponse_Session:
            type: object
            properties:
                until:
                    type: string
                    description: Time until which session and token is active
                    format: date-time
                ip:
                    type: string
                    description: Users IP to which session is bound
                userAgent:
                    type: string
                    description: Users User-Agent header to which session is bound
                deviceId:
                    type: string
                    description: Users DeviceId to which session is bound if login was by mobile device
        auth.v1.CheckResponse_User:
            type: object
            properties:
                type:
                    type: string
                    description: User category type
                displayName:
                    type: string
                    description: User display name
                email:
                    type: string
                    description: User email
                phone:
                    type: string
                    description: User phone
        auth.v1.DeactivateRequest:
            type: object
            properties:
                id:
                    type: string
        auth.v1.EditRequest:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                type:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                telegramChatId:
                    type: string
                password:
                    type: string
        auth.v1.GenerateCodeRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Users phone (like 9003002020) or email (like user@name.mail)
                stats:
                    $ref: '#/components/schemas/auth.v1.Stats'
        auth.v1.HistoryItem:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                when:
                    type: string
                    format: date-time
                event:
                    type: string
                ip:
                    type: string
                userAgent:
                    type: string
        auth.v1.HistoryRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: int64
                limit:
                    type: integer
                    format: int64
                offset:
                    type: integer
                    format: int64
        auth.v1.HistoryResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/auth.v1.HistoryItem'
        auth.v1.LoginByCodeRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Users phone (like 9003002020) or email (like user@name.mail)
                code:
                    type: string
                    description: Generated one-time code for login
                remember:
                    type: boolean
                    description: Remember session â€” if true then session interval is 7 days, else 1 day
                stats:
                    $ref: '#/components/schemas/auth.v1.Stats'
        auth.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Users phone (like 9003002020) or email (like user@name.mail)
                password:
                    type: string
                    description: Users password
                remember:
                    type: boolean
                    description: Remember session â€” if true then session interval is 7 days, else 1 day
                stats:
                    $ref: '#/components/schemas/auth.v1.Stats'
        auth.v1.LoginResponse:
            type: object
            properties:
                token:
                    type: string
                    description: Bearer API JWT token
                until:
                    type: string
                    description: Time until which session and token is active
                    format: date-time
        auth.v1.NewPasswordRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Users phone (like 9003002020) or email (like user@name.mail)
                passwordResetHash:
                    type: string
                    description: Unique identifier for password reset (previously sent with ResetPassword())
                password:
                    type: string
                    description: New users password
                stats:
                    $ref: '#/components/schemas/auth.v1.Stats'
        auth.v1.ResetPasswordRequest:
            type: object
            properties:
                username:
                    type: string
                    description: Users phone (like 9003002020) or email (like user@name.mail)
                stats:
                    $ref: '#/components/schemas/auth.v1.Stats'
        auth.v1.Stats:
            type: object
            properties:
                ip:
                    type: string
                    description: Users IP extracted from request
                userAgent:
                    type: string
                    description: Users User-Agent extracted from request
                deviceId:
                    type: string
                    description: Users DeviceId extracted from request if login was by mobile device
        auth.v1.UserNothing:
            type: object
            properties: {}
        notification.v1.CheckRequest:
            type: object
            properties:
                id:
                    type: integer
                    description: Notification identifier
                    format: int64
            description: Request for check status
        notification.v1.CheckResponse:
            type: object
            properties:
                status:
                    type: integer
                    description: Notification status number
                    format: enum
            description: Response for check status
        notification.v1.EnqueueResponse:
            type: object
            properties:
                id:
                    type: integer
                    description: Notification identifier
                    format: int64
            description: Response by enqueuing message
        notification.v1.SendRequest:
            required:
                - type
                - payload
            type: object
            properties:
                type:
                    type: integer
                    description: Type of notification channel
                    format: enum
                payload:
                    type: object
                    additionalProperties:
                        type: string
                    description: Notification message payload
                plannedAt:
                    type: string
                    description: Planned time to send message (works with enqueue)
                    format: date-time
                ttl:
                    type: integer
                    description: Time to Live for notification in seconds
                    format: uint64
                senderId:
                    type: integer
                    description: Sender identifier (user id from auth service)
                    format: int64
            description: Basic notification request
        notification.v1.SendResponse:
            type: object
            properties:
                id:
                    type: integer
                    description: Notification identifier
                    format: int64
                sent:
                    type: boolean
                    description: Is notification was sent? May be false if it will enqueued
            description: Response by sending message
tags:
    - name: Auth
      description: This API provides methods for users authentication (returns JWT, without cookies)
    - name: Notification
      description: This API provides simple interface for send custom notifications in various channel with obvious behaviour.
    - name: User
